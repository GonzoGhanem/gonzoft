//= require jquery.min
//= require suggest.min
//= require bootstrap
//= require angular
//= require angular-route
//= require angular-resource
//= require ui-bootstrap-tpls-0.11.0
//= require angular-strap.min
//= require_tree ./services/
//= require_tree ./controllers/
//= require_tree ./directives/
//= require_tree .
//= require_self


var myApp = angular.module('gonzoft', [ 'gonzoftNavbar',
                                        'ngRoute', 
                                        'ui.bootstrap', 
                                        'userService', 
                                        'sessionService',
                                        'recordService', 
                                        'adminService', 
                                        'clientService', 
                                        'skillService',
                                        'projectService', 
                                        'timeService', 
                                        '$strap.directives'])
  .config(['$httpProvider', function($httpProvider){
        $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content');
        var interceptor = ['$location', '$rootScope', '$q', function($location, $rootScope, $q) {
            function success(response) {
                return response
            };

            function error(response) {
                if (response.status == 401) {
                    $rootScope.$broadcast('event:unauthorized');
                    $location.path('/users/login');
                    return response;
                };
                return $q.reject(response);
            };

            return function(promise) {
                return promise.then(success, error);
            };
        }];
        $httpProvider.responseInterceptors.push(interceptor);
  }])


  .config(['$routeProvider', function($routeProvider){
    $routeProvider
      .when('/', {
        templateUrl:'<%= asset_path("home/index.html") %>'
      })
      .when('/record', {
        templateUrl: '/record/index.html', 
        controller: RecordCtrl
      })
      .when('/clients', {
        templateUrl: '<%= asset_path("clients/index.html") %>',
        controller: ClientCtrl,
        resolve: {
          clients: ['Client', function(Client){
            return Client.getAllClients();
          }]
        }
      })
      .when('/client/new', {
        templateUrl: '<%= asset_path("clients/new.html") %>',
        controller: ClientNewCtrl
      })
      .when('/client/:client_id/project/new', {
        templateUrl: '<%= asset_path("clients/projects/new.html") %>',
        controller: ProjectCtrl,
        resolve: {
          client: ['$route', 'Client', function($route, Client){
            return Client.getById($route.current.params.client_id);
          }],
          projects: ['$route', 'Project', function($route, Project){
            return Project.getProjectsByClient($route.current.params.client_id);
          }],
          positions: ['Admin', function(Admin){
            return Admin.getAllPositions();
          }],
          users: ['Admin', function(Admin){
            return Admin.getAllUsers();
          }]
        }
      })
      .when('/users/login', 
        {templateUrl: '<%= asset_path("users/login.html") %>', 
        controller: UsersCtrl
      })
      .when('/users/index', 
        {templateUrl: '<%= asset_path("admin/users.html") %>', 
        controller: AdminCtrl,
        resolve: {
          users: ['Admin', function(Admin){
            return Admin.getAllUsers();
          }]
        }
      })
      .when('/users/register', {
        templateUrl:'<%= asset_path("users/register.html") %>',  
        controller:UsersCtrl
      })
      .when('/skills/index', {
        templateUrl:'<%= asset_path("admin/skills.html") %>',  
        controller:SkillsCtrl,
        resolve: {
          skills: ['Admin', function(Admin){
            return Admin.getAllSkills();
          }]
        }
      })
      .when('/user/skills', {
        templateUrl:'<%= asset_path("users/skills.html") %>', 
        controller:UserSkillsCtrl,
        resolve: {
          skills: ['Admin', function(Admin){
            return Admin.getAllSkills();
          }]
        }
      })
      .when('/time/index', {
        templateUrl: '<%= asset_path("time/index.html") %>', 
        controller: TimeCtrl,
        resolve: {
          time: ['Time', function(Time){
            return Time.getTimeTracker()
          }]
        }
      })
      .when('/time/show', { 
        templateUrl: '<%= asset_path("time/show.html") %>',
        controller: TimeCtrl,
        resolve: {
          time: ['Time', function(Time){
            return Time.getTimetracker()
          }]
        }
      }) 
      .when('/user/profile', {
        templateUrl:'<%= asset_path("users/profile.html") %>', 
        controller:ProfileCtrl,
        resolve: {
          roles: ['Admin', function(Admin){
            return Admin.getRoles();
          }],
          positions: ['Admin', function(Admin){
            return Admin.getAllPositions();
          }]
        }
      });
  }])
  .controller('AppCtrl', ['$scope', 'Session', '$timeout', 'messages', function($scope, Session, $timeout, messages){
    $scope.models = {};
    $scope.models.user = null;
    
    $scope.messages = messages;
    $scope.sessionHandler = Session;
    Session.requestCurrentUser().then(function(current_user) {
        $scope.models.user = current_user;
        //$scope.models.user.image = "/images/" + current_user.name;       
        if($scope.models.user) {
          for(var role in $scope.models.user.roles){
            if($scope.models.user.roles[role].name == "admin"){
              $scope.models.user.is_admin = true;
            }
          }
        }
      }
    );

    $scope.$on('event:unauthorized', function(event) {
        $scope.messages.setCurrent('errors',"Necesita identificarse para ingresar.");
    });

    $scope.$on('event:authenticated', function(event) {
        $scope.messages.setCurrent('errors',"Necesita identificarse para ingresar.");
    });

    $scope.logout = function(){
      Session.logout();
      $scope.models.user = null;
    };

  }])
  .factory('messages', function($rootScope) {
        
        var queueNext = [], currentMessage = {errors: '', success:'', warnings:''}, nextMessage = '';
        var clearQueue = function(){
          currentMessage = {
            errors: '',
            success: '',
            warnings: ''
          };
        };
        $rootScope.$on('$routeChangeSuccess', function() {
            clearQueue();
            if (queueNext.length > 0) {
                nextMessage = queueNext.shift();
            }
            else {
                nextMessage = '';
            }
        });

        return {
            setCurrent: function(type, message) {
                clearQueue();
                switch (type){
                  case "errors":
                    currentMessage.errors = message;
                    break;
                  case "success":
                    currentMessage.success = message;
                    break;
                  case "warnings":
                    currentMessage.warnings = message;
                    break;
                }
            },
            getCurrent: function(type, message) {
              switch (type){
                case "errors":
                  return currentMessage.errors;
                  break;
                case "success":
                  return currentMessage.success;
                  break;
                case "warnings":
                  return currentMessage.warnings;
                  break;
              }
            },
            setNext: function(message) {
                queueNext.push(message);
            },
            getNext: function() {
                return nextMessage;
            }
        };

    });
